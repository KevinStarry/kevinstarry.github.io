<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Website of KevinStarry</title>
    <link>https://kevinstarry.github.io/</link>
    <description>Recent content on Website of KevinStarry</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 27 Nov 2020 22:16:02 +0800</lastBuildDate><atom:link href="https://kevinstarry.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>hugo</title>
      <link>https://kevinstarry.github.io/post/hugo/</link>
      <pubDate>Fri, 27 Nov 2020 22:16:02 +0800</pubDate>
      
      <guid>https://kevinstarry.github.io/post/hugo/</guid>
      <description>前言 极客精神大概就是一种折腾吧，之前使用Hexo搭建的网站，总觉得使用node.js显得十分麻烦，在找了一圈之后才发现了hugo。网上教程很多，但是对于一个概念都没有树立的人来说，有些显而易见的东西实际上对于没有概念的人而言就有些难了。
参考https://gohugo.io/getting-started/quick-start/的教程进行创建，但是在应用主题上就出现了问题，虽然现在也不确定是不是像我这样子使用，但是至少我应该算是摸到了些门路。
Hugo配置使用  Windows10系统，在GitHub，Hugo项目上直接下载Hugo.zip压缩包，里面只有一个hugo.exe，剩下的两个文件没有用到。我把hugo.exe的目录添加到了系统环境变量path中，以方便power shell 终端使用。 hugo new site quickstart。在Git Bash窗口下执行这个命令就会在当前路径下生成一个quickstart文件夹，里面包含很多空文件夹，也就是目录结构。其中有一个themes（主题）文件夹。在这个文件夹下，去hugo官网主题下找喜欢的主题，拷贝到目录下即可。一般在该主题文件中会有exampleSite文件夹。我的做法是把这个文件夹里的文件全部复制到quickstart目录下，覆盖原来的文件夹。 hugo。主题找好以后回到quickstart目录下，执行hugo，这时候会生成一个public文件夹。这个文件夹就是我们要放到GitHub上的展示页面的，换句话说，quickstart文件夹是整个项目，而public文件夹下则是生成的静态文件，也就是我们的网站。 hugo new post/first-post.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://kevinstarry.github.io/about/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kevinstarry.github.io/about/</guid>
      <description>Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.</description>
    </item>
    
  </channel>
</rss>
